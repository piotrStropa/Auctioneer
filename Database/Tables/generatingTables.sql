-- Generated by Oracle SQL Developer Data Modeler 18.3.0.268.1156
--   at:        2020-01-26 20:33:08 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE accountsuspendeddates (
    userid      INTEGER NOT NULL,
    startdate   DATE NOT NULL,
    enddate     DATE NOT NULL
)

go

ALTER TABLE AccountSuspendedDates ADD constraint accountsuspendeddates_pk PRIMARY KEY CLUSTERED (userID, startDate)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
 go

CREATE TABLE addressbook 
    ( addressid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     userID INTEGER NOT NULL , 
     addressFirstLane NVARCHAR (25) NOT NULL , 
     addressSecondLane NVARCHAR (25) NOT NULL , 
     zipCode NVARCHAR (5) NOT NULL , 
     city NVARCHAR (25) NOT NULL ) 
go

ALTER TABLE AddressBook ADD constraint commercialusers_pk PRIMARY KEY CLUSTERED (addressID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE auctionpictures 
    ( pictureid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     auctionID INTEGER NOT NULL , 
     pictureData VARBINARY (max) NOT NULL ) 
go

ALTER TABLE AuctionPictures ADD constraint auctionpictures_pk PRIMARY KEY CLUSTERED (pictureID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go


CREATE TABLE auctionpricehistory (
    price       INTEGER NOT NULL,
    biddate     DATE NOT NULL,
    userid      INTEGER NOT NULL,
    auctionid   INTEGER NOT NULL
)

go

ALTER TABLE AuctionPriceHistory ADD constraint auctionpricehistory_pk PRIMARY KEY CLUSTERED (price, auctionID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE auctions 
    ( auctionid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     currentPrice INTEGER NOT NULL , 
     userID INTEGER NOT NULL , 
     name NVARCHAR (25) NOT NULL , 
     description NVARCHAR (500) NOT NULL , 
     categoryID INTEGER NOT NULL , 
     creationDate DATE NOT NULL , 
     expirationDate DATE NOT NULL , 
     totalBids INTEGER NOT NULL , 
     totalPhotos INTEGER NOT NULL , 
     addressID INTEGER NOT NULL ) 
go

ALTER TABLE Auctions ADD constraint aucitons_pk PRIMARY KEY CLUSTERED (auctionID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE categories 
    ( categoryid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     categoryName NVARCHAR (25) NOT NULL , 
     categoryPicture VARBINARY (max) NOT NULL ) 
go

ALTER TABLE Categories ADD constraint categories_pk PRIMARY KEY CLUSTERED (categoryID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE categorymoderators (
    categoryid   INTEGER NOT NULL,
    userid       INTEGER NOT NULL
)

go

ALTER TABLE CategoryModerators ADD constraint categorymoderators_pk PRIMARY KEY CLUSTERED (categoryID, userID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE commonusers (
    userid         INTEGER NOT NULL,
    createddate    DATE NOT NULL,
    auctioncount   INTEGER NOT NULL
)

go

ALTER TABLE CommonUsers ADD constraint commonusers_pk PRIMARY KEY CLUSTERED (userID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE employees 
    (
    userid        INTEGER NOT NULL,
    permissions   nvarchar (10) NOT NULL, bossid INTEGER 
    ) go

ALTER TABLE Employees ADD constraint employees_pk PRIMARY KEY CLUSTERED (userID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE messages 
    ( messageid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     topicName NVARCHAR (25) NOT NULL , 
     text NVARCHAR (200) NOT NULL , 
     senderID INTEGER NOT NULL , 
     recipentID INTEGER NOT NULL , 
     auctionID INTEGER NOT NULL , 
     msgDate DATE NOT NULL ) 
go

ALTER TABLE Messages ADD constraint messages_pk PRIMARY KEY CLUSTERED (messageID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE users 
    ( userid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     login NVARCHAR (25) NOT NULL , 
     passwordMD5 NVARCHAR (32) NOT NULL , 
     userType NVARCHAR (1) NOT NULL , 
     name NVARCHAR (25) NOT NULL , 
     surname NVARCHAR (25) NOT NULL , 
     warningCount INTEGER NOT NULL ) 
go

ALTER TABLE Users ADD constraint users_pk PRIMARY KEY CLUSTERED (userID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

CREATE TABLE userwarnings 
    ( warningid INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     warningDescription NVARCHAR (125) NOT NULL , 
     accountSuspended INTEGER NOT NULL , 
     userID INTEGER NOT NULL ) 
go

ALTER TABLE UserWarnings ADD constraint userwarnings_pk PRIMARY KEY CLUSTERED (warningID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON ) 
go

ALTER TABLE AccountSuspendedDates
    ADD CONSTRAINT accountsuspendeddates_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action 

go

ALTER TABLE AddressBook
    ADD CONSTRAINT addressbook_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action
 go

ALTER TABLE AuctionPictures
    ADD CONSTRAINT auctionpictures_auctions_fk FOREIGN KEY ( auctionid )
        REFERENCES auctions ( auctionid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE AuctionPriceHistory
    ADD CONSTRAINT auctionpricehistory_auctions_fk FOREIGN KEY ( auctionid )
        REFERENCES auctions ( auctionid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE AuctionPriceHistory
    ADD CONSTRAINT auctionpricehistory_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE Auctions
    ADD CONSTRAINT auctions_address_fk FOREIGN KEY ( addressid )
        REFERENCES addressbook ( addressid )
ON DELETE NO ACTION 
    ON UPDATE no action 


go

ALTER TABLE Auctions
    ADD CONSTRAINT auctions_categories_fk FOREIGN KEY ( categoryid )
        REFERENCES categories ( categoryid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE Auctions
    ADD CONSTRAINT auctions_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE CategoryModerators
    ADD CONSTRAINT categorymoderators_categories_fk FOREIGN KEY ( categoryid )
        REFERENCES categories ( categoryid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE CategoryModerators
    ADD CONSTRAINT categorymoderators_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE CommonUsers
    ADD CONSTRAINT commonusers_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE Employees
    ADD CONSTRAINT employees_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE Employees
    ADD CONSTRAINT employees_users_fkv2 FOREIGN KEY ( bossid )
        REFERENCES users ( userid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE Messages
    ADD CONSTRAINT messages_auctions_fk FOREIGN KEY ( auctionid )
        REFERENCES auctions ( auctionid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

ALTER TABLE Messages
    ADD CONSTRAINT messages_users_fk FOREIGN KEY ( senderid )
        REFERENCES users ( userid )
ON DELETE NO ACTION 
    ON UPDATE no action
 go

ALTER TABLE Messages
    ADD CONSTRAINT messages_users_fkv2 FOREIGN KEY ( recipentid )
        REFERENCES users ( userid )
ON DELETE NO ACTION 
    ON UPDATE no action 
go

ALTER TABLE UserWarnings
    ADD CONSTRAINT userwarnings_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE 
    ON UPDATE no action 
go

